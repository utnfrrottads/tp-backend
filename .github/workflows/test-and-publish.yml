name: Test and Publish to DockerHub

on: [push]

jobs:
  tests:
    name: Run Newman and Cypress tests
    timeout-minutes: 15
    runs-on: ubuntu-latest
    environment: CI

    strategy:
      matrix:
        node-version: [14.9.x]

    steps:
      - name: Configure sysctl limits
        run: |
          sudo swapoff -a
          sudo sysctl -w vm.swappiness=1
          sudo sysctl -w fs.file-max=262144
          sudo sysctl -w vm.max_map_count=262144

      - uses: getong/elasticsearch-action@v1.2
        with:
          elasticsearch version: '7.16.3'
          host port: 9200
          container port: 9200
          host node port: 9300
          node port: 9300
          discovery type: 'single-node'

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Run API in background
        working-directory: server
        run: |
          npm ci
          npm start &
        env:
          NODE_ENV: production
          PORT: 4000
          SOCKET_PORT: 4001
          TOKEN_SECRET: ${{ secrets.TOKEN_SECRET }}
          MONGO_ATLAS_URI: ${{ secrets.MONGO_ATLAS_URI }}

      - uses: matt-ball/newman-action@master
        continue-on-error: true
        with:
          collection: "server/tests/GraphQL-API-ServiciosYa.postman_collection.json"
          environment: "server/tests/ServiciosYa Local Environment.postman_environment.json"
          reporters: '["cli"]'
      
      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          working-directory: client
          start: npm start
          wait-on: 'http://localhost:4200'

  build-and-push-docker-images:
    name: Build Docker images and push to DockerHub repositories
    runs-on: ubuntu-latest
    needs: tests
    environment: CI

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build client image and push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: ./client
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/serviciosya-client:latest

      - name: Build server image and push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: ./server
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/serviciosya-server:latest

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
